@startuml UploadFile

actor User

participant Middlewares
participant Controllers
database Postgres
participant Multer 

User -> Middlewares ++: GET/models/image/id
group step: Authentication
    Middlewares -> Middlewares : checkAuth
else Unauthorized
    autonumber 3
    Middlewares --[#red]> User : 401 Unauthorized - Token not provided
    autonumber 3
    Middlewares --[#red]> User : 401 Unauthorized - Token not valid
end

group step: Ownership 
    autonumber 3
    Middlewares -> Middlewares : checkOwner 
else Unauthorized
autonumber 4
    Middlewares --[#red]> User : 404 Unauthorized
else Forbidden 
    Middlewares --[#red]> User : 403 Forbidden - You are not the owner of this model
end
autonumber 4
group Upload File
    Middlewares -> Controllers --++: uploadFile
else File is not a .py
    autonumber 5
    Controllers --[#red]> User: Invalid file extension. Only .py files are allowed
else 
    autonumber 5
    Controllers -> Multer++: upload.single
    Multer --[#green]> Controllers--: 200 OK
    Controllers --[#green]> User: 200 OK - Upload completed successfully
else Upload Failed
    autonumber 6
    Controllers --[#red]> User: 400 Bad Request
    autonumber 6
    Controllers --[#red]> User: 500 Internal Server Error
else No File
    autonumber 5
    Controllers --[#red]> User --: 400 Bad Request - No file was provided
end

@enduml